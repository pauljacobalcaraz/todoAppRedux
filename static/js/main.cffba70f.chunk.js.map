{"version":3,"sources":["Components/AddTaskForm.js","Components/ToDo.js","Components/ToDoList.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["AddTaskForm","state","name","status","requiredMessage","btnAddNewTask","newTask","trim","props","addTask","setState","type","value","this","onChange","e","target","onClick","React","Component","connect","dispatch","payload","ToDo","btnDone","doneTask","id","task","markDoneTask","deleteTask","ToDoList","tasks","filter","map","store","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","v4","reducer","action","TaskCopy","push","filteredTask","idDone","filteredTaskDone","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cffba70f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTaskForm extends React.Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tstatus: 'Pending',\r\n\t\trequiredMessage: '',\r\n\t};\r\n\r\n\tbtnAddNewTask = () => {\r\n\t\tif (this.state.name === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\trequiredMessage: 'Invalid Input',\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet newTask = {\r\n\t\t\tname: this.state.name.trim(),\r\n\t\t\tstatus: this.state.status,\r\n\t\t};\r\n\t\tthis.props.addTask(newTask);\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tNew Task:{' '}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\tthis.setState({ name: e.target.value, requiredMessage: '' })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.state.requiredMessage}\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button onClick={this.btnAddNewTask}>Add new task</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTask: (newTask) => dispatch({ type: 'ADD_TASK', payload: newTask }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTaskForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ToDo extends React.Component {\r\n\tbtnDone = () => {\r\n\t\tlet doneTask = {\r\n\t\t\tid: this.props.task.id,\r\n\t\t\tname: this.props.task.name,\r\n\t\t\tstatus: 'Done',\r\n\t\t};\r\n\t\tthis.props.markDoneTask(doneTask);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<button onClick={() => this.props.deleteTask(this.props.task.id)}>\r\n\t\t\t\t\tx\r\n\t\t\t\t</button>\r\n\t\t\t\t{this.props.task.name + ' ' + this.props.task.status}{' '}\r\n\t\t\t\t<button onClick={this.btnDone}>Done</button>\r\n\t\t\t\t<hr />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteTask: (id) => dispatch({ type: 'DELETE_TASK', payload: id }),\r\n\t\tmarkDoneTask: (doneTask) =>\r\n\t\t\tdispatch({ type: 'DONE_TASK', payload: doneTask }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ToDo);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDo from './ToDo';\r\n\r\nclass ToDoList extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{/* {this.props.tasks.map((task) => {\r\n\t\t\t\t\t\treturn <ToDo key={task.name} task={task} />;\r\n\t\t\t\t\t})} */}\r\n\r\n\t\t\t\t\t<h2>Pending</h2>\r\n\r\n\t\t\t\t\t{this.props.tasks\r\n\t\t\t\t\t\t.filter((task) => task.status === 'Pending')\r\n\t\t\t\t\t\t.map((task) => (\r\n\t\t\t\t\t\t\t<ToDo key={task.id} task={task} />\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t<h2>Done</h2>\r\n\t\t\t\t\t{this.props.tasks\r\n\t\t\t\t\t\t.filter((task) => task.status === 'Done')\r\n\t\t\t\t\t\t.map((task) => (\r\n\t\t\t\t\t\t\t<ToDo key={task.id} task={task} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (store) => {\r\n\treturn {\r\n\t\ttasks: store.tasks,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(ToDoList);\r\n","import './App.css';\nimport AddTaskForm from './Components/AddTaskForm';\nimport ToDoList from './Components/ToDoList';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<AddTaskForm />\n\t\t\t\t<ToDoList />\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 } from 'uuid';\r\n\r\nconst initialState = {\r\n\ttasks: [\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'Eat',\r\n\t\t\tstatus: 'Done',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'Sleep',\r\n\t\t\tstatus: 'Done',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'Code',\r\n\t\t\tstatus: 'Pending',\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_TASK':\r\n\t\t\tlet newTask = action.payload;\r\n\t\t\tnewTask.id = v4();\r\n\t\t\tlet TaskCopy = [...state.tasks];\r\n\t\t\tTaskCopy.push(newTask);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: TaskCopy,\r\n\t\t\t};\r\n\t\tcase 'DELETE_TASK':\r\n\t\t\tconst id = action.payload;\r\n\t\t\tlet filteredTask = state.tasks.filter((task) => task.id !== id);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: filteredTask,\r\n\t\t\t};\r\n\t\tcase 'DONE_TASK':\r\n\t\t\t// alert(action.payload);\r\n\t\t\tconst idDone = action.payload;\r\n\t\t\tlet filteredTaskDone = state.tasks.filter(\r\n\t\t\t\t(task) => task.id !== idDone.id\r\n\t\t\t);\r\n\t\t\tfilteredTaskDone.push(idDone);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: filteredTaskDone,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}