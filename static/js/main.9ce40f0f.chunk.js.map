{"version":3,"sources":["Components/AddTaskForm.js","Components/ToDo.js","Components/ToDoList.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["AddTaskForm","state","name","status","requiredMessage","btnAddNewTask","newTask","trim","props","addTask","setState","type","value","this","onChange","e","target","onClick","className","React","Component","connect","dispatch","payload","ToDo","btnDone","doneTask","id","task","markDoneTask","Button","variant","Badge","deleteTask","ToDoList","tasks","filter","map","store","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","v4","reducer","action","TaskCopy","push","filteredTask","idDone","filteredTaskDone","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ce40f0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddTaskForm extends React.Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\tstatus: 'Pending',\r\n\t\trequiredMessage: '',\r\n\t};\r\n\r\n\tbtnAddNewTask = () => {\r\n\t\tif (this.state.name === '') {\r\n\t\t\tthis.setState({\r\n\t\t\t\trequiredMessage: 'Invalid Input',\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet newTask = {\r\n\t\t\tname: this.state.name.trim(),\r\n\t\t\tstatus: this.state.status,\r\n\t\t};\r\n\t\tthis.props.addTask(newTask);\r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t});\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tNew Task:{' '}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\tthis.setState({ name: e.target.value, requiredMessage: '' })\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{this.state.requiredMessage}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={this.btnAddNewTask}\r\n\t\t\t\t\t\tclassName='btn btn-primary mb-2 ml-2'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd new task\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\taddTask: (newTask) => dispatch({ type: 'ADD_TASK', payload: newTask }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTaskForm);\r\n","import React from 'react';\r\nimport { Button, Badge } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ToDo extends React.Component {\r\n\tbtnDone = () => {\r\n\t\tlet doneTask = {\r\n\t\t\tid: this.props.task.id,\r\n\t\t\tname: this.props.task.name,\r\n\t\t\tstatus: 'Done',\r\n\t\t};\r\n\t\tthis.props.markDoneTask(doneTask);\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='d-flex justify-content-center'>\r\n\t\t\t\t{/* \t{task.name}\r\n                {task.status} */}\r\n\t\t\t\t<Button variant='primary' className=' my-1'>\r\n\t\t\t\t\t{this.props.task.name}{' '}\r\n\t\t\t\t\t<Badge variant='light'>{this.props.task.status}</Badge>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<div className='my-1'>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='danger'\r\n\t\t\t\t\t\tclassName='mx-1 p-1'\r\n\t\t\t\t\t\tonClick={() => this.props.deleteTask(this.props.task.id)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t✗\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{this.props.task.status === 'Pending' ? (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tvariant='success'\r\n\t\t\t\t\t\t\tclassName='mx-1 p-1'\r\n\t\t\t\t\t\t\tonClick={this.btnDone}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t✓\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t''\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tdeleteTask: (id) => dispatch({ type: 'DELETE_TASK', payload: id }),\r\n\t\tmarkDoneTask: (doneTask) =>\r\n\t\t\tdispatch({ type: 'DONE_TASK', payload: doneTask }),\r\n\t};\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ToDo);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ToDo from './ToDo';\r\n\r\nclass ToDoList extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Pending</h2>\r\n\t\t\t\t\t\t{this.props.tasks\r\n\t\t\t\t\t\t\t.filter((task) => task.status === 'Pending')\r\n\t\t\t\t\t\t\t.map((task) => (\r\n\t\t\t\t\t\t\t\t<ToDo key={task.id} task={task} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h2>Done</h2>\r\n\t\t\t\t\t\t{this.props.tasks\r\n\t\t\t\t\t\t\t.filter((task) => task.status === 'Done')\r\n\t\t\t\t\t\t\t.map((task) => (\r\n\t\t\t\t\t\t\t\t<ToDo key={task.id} task={task} />\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</>\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\nconst mapStateToProps = (store) => {\r\n\treturn {\r\n\t\ttasks: store.tasks,\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps)(ToDoList);\r\n","import './App.css';\nimport AddTaskForm from './Components/AddTaskForm';\nimport ToDoList from './Components/ToDoList';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<header className='App-header'>\n\t\t\t\t<AddTaskForm />\n\t\t\t\t<div className=' col-10 d-flex justify-content-around'>\n\t\t\t\t\t<ToDoList />\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { v4 } from 'uuid';\r\n\r\nconst initialState = {\r\n\ttasks: [\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'Eat',\r\n\t\t\tstatus: 'Done',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'Sleep',\r\n\t\t\tstatus: 'Done',\r\n\t\t},\r\n\t\t{\r\n\t\t\tid: v4(),\r\n\t\t\tname: 'Code',\r\n\t\t\tstatus: 'Pending',\r\n\t\t},\r\n\t],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'ADD_TASK':\r\n\t\t\tlet newTask = action.payload;\r\n\t\t\tnewTask.id = v4();\r\n\t\t\tlet TaskCopy = [...state.tasks];\r\n\t\t\tTaskCopy.push(newTask);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: TaskCopy,\r\n\t\t\t};\r\n\t\tcase 'DELETE_TASK':\r\n\t\t\tconst id = action.payload;\r\n\t\t\tlet filteredTask = state.tasks.filter((task) => task.id !== id);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: filteredTask,\r\n\t\t\t};\r\n\t\tcase 'DONE_TASK':\r\n\t\t\t// alert(action.payload);\r\n\t\t\tconst idDone = action.payload;\r\n\t\t\tlet filteredTaskDone = state.tasks.filter(\r\n\t\t\t\t(task) => task.id !== idDone.id\r\n\t\t\t);\r\n\t\t\tfilteredTaskDone.push(idDone);\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttasks: filteredTaskDone,\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}